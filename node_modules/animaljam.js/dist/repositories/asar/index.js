import { createPackageWithOptions, extractAll, extractFile } from '@electron/asar';
import path from 'node:path';
import { homedir, platform } from 'os';
import { Repository } from '../index.js';
export default class AsarRepository extends Repository {
    get getBaseAsarPath() {
        switch (platform()) {
            case 'darwin':
                return '/Applications/Animal Jam Classic.app/Contents/Resources/asar';
            case 'win32':
                return `${path.join(homedir())
                    .split('\\')
                    .join('/')}/AppData/Local/Programs/aj-classic/resources/app.asar`;
        }
    }
    async unpack(options) {
        return new Promise((resolve, reject) => {
            try {
                resolve(extractAll(this.getBaseAsarPath, options?.saveFileAsarPath ?? `./asar`));
            }
            catch (error) {
                reject(error);
            }
        });
    }
    async pack(options) {
        return new Promise((resolve, reject) => {
            try {
                resolve(createPackageWithOptions(options.src, options.saveFileAsarPath, {}));
            }
            catch (error) {
                reject(error);
            }
        });
    }
    async getFile(name) {
        return new Promise((resolve, reject) => {
            try {
                resolve(extractFile(this.getBaseAsarPath, name));
            }
            catch (error) {
                reject(error);
            }
        });
    }
}
